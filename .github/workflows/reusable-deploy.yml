name: Reusable Deploy

on:
  workflow_call:
    inputs:
      project:
        required: false
        type: string
        default: tecpark
      env:
        required: true
        type: string
      tf_version:
        required: false
        type: string
        default: "1.9.5"
      tg_version:
        required: false
        type: string
        default: "0.66.9"
      image_tag:
        required: false
        type: string
        default: ${{ github.sha }}

jobs:
  migration:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_GITHUB_ACTIONS_IAM_ROLE_ARN }}

      - name: Configure AWS Profile
        run: |
          export AWS_PROFILE="${{ inputs.project }}-${{ inputs.env }}"
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile $AWS_PROFILE
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile $AWS_PROFILE
          aws configure set aws_session_token $AWS_SESSION_TOKEN --profile $AWS_PROFILE
          echo "AWS_PROFILE=$AWS_PROFILE" >> $GITHUB_ENV

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: docker build -t ${{ vars.AWS_MIGRATION_ECR_URL }}:${{ inputs.image_tag }} db/mysql

      - name: Push Docker image to ECR
        run: docker push ${{ vars.AWS_MIGRATION_ECR_URL }}:${{ inputs.image_tag }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Set up Terragrunt
        run: |
          sudo curl -sSL https://github.com/gruntwork-io/terragrunt/releases/download/v${{ inputs.tg_version }}/terragrunt_linux_amd64 -o /usr/local/bin/terragrunt
          sudo chmod a+x /usr/local/bin/terragrunt
          terragrunt --version

      - name: Plan migration task
        working-directory: infra/env/stg/operation/migration/
        env:
          TF_VAR_terragrunt_env: ${{ inputs.env }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
        run: terragrunt plan --target=aws_ecs_task_definition.migration

      - name: Apply migration task
        working-directory: infra/env/stg/operation/migration/
        env:
          TF_VAR_terragrunt_env: ${{ inputs.env }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
        run: terragrunt apply --target=aws_ecs_task_definition.migration
